<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[使用hexo搭建github个人博客]]></title>
    <url>%2F%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%2F%E4%BD%BF%E7%94%A8hexo%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2.html</url>
    <content type="text"><![CDATA[使用hexo 搭建 github 个人博客github博客搭建:全是静态文件,访问快(以.md格式转为html)可以绑定域名,git管理, 快速方便… 域名绑定:a.先ping一下 你的用户名.github.io的IP (185.199.108.153) b.在域名备案处设置解析(无论是否加www都可以跳转到你的github上): 类型:A 记录: @ 记录值: ip 类型: CNAME 记录: www 记录值: 用户名.github.io正题 需要github帐号,node.js(npm自带)环境,git管理工具 在gihub上创建仓库 格式必须为 用户名.github.io在setting中开启 GitHub Pages 通过访问地址: 用户名.github.io 查看效果 .配置ssh(解决git上传权限问题); $ cd ~/. ssh #检查本机已存在的ssh密钥 如果提示：No such file or directory 说明你是第一次使用git。需要配置邮箱(最好是github设置时 的邮箱) $ ssh-keygen -t rsa -C &quot;邮件地址&quot; 然后连续3次回车，最终会生成一个文件在用户目录下，打开用户目录，找到.ssh\id_rsa.pub文件,复制内容 打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key：复制上面的内容到key中 还需要配置: 帐号 和 邮箱 $ git config --global user.name &quot;liu&quot; // 你的github用户名，非昵称 $ git config --global user.email &quot;xxx@qq.com&quot; // 填写你的github注册邮箱 git安装 hexo(需要指定目录 如:myBlog): 1234全局安装: $ npm install -g hexo安装到指定目录: $ npm install hexo myBlog 配置环境变量 path (可不配): 目录\node_modules.bin 初始化目录(进入myBlog): hexo init 修改主题 , 配置提交到 github找到主题克隆下来 放到myBlog/themes/文件中修改 _config.yml 配置 (注意: 后面跟一个空格) theme: landscape deploy: type: git repository: git@github.com:244377606/244377606.github.io branch: master 插件和主题。 官网： http://hexo.io github: https://github.com/hexojs/hexo 命令: hexo clear #清理public文件下内容 hexo g # 在public文件夹下生成 相关html文件 hexo d # 提交到 github上(需要配置) hexo d -g #生成并上传 hexo new “postName” #新建文章 hexo new page “m” #不会作为文章出现在博文目录。 最终部署时生成：hexo\public\m\index.html hexo s # 启动本地服务预览 localhost:4000 执行hexo d的话一般会报如下错误: not found: git要安装一个插件 npm install hexo-deployer-git –save 一些非md文件可以把他们放到source文件夹下， 这里的所有文件都会原样复制（除了md文件）到public目录的 hexo默认会把所有md文件都转换成html， 包括README.md，所有需要每次生成之后、上传之前， 手动将README.md复制到public目录，并删除README.html。 写博客 (需要定位到myBlog 或 下级目录) 命令产生md: hexo会在_posts下生成相关md文件(或手动创建),编辑它就可以展示内容, hexo d -g 会上传到github .md格式最上面写法12345678910111213--- title: postName #文章页面上的显示名称，一般是中文 date: 2019-09-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改 categories: 默认分类 #分类,加入哪个 分类中 tags: [tag1,tag2,tag3] #文章标签，可空，多标签请用格式，注意:后面有个空格 description: 引擎搜索用 会出现在meta的description里面---以下为正文...(只会显示这部分)；&lt;!--more--&gt; //以下内容需要展开全文阅读内容..(会暂时隐藏)； 1 12]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>%2F%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0%2Fcss.html</url>
    <content type="text"><![CDATA[而发会计66 是 是封 是否 方式 是是 123456是是否是 地方function()&#123;​```js速度是​ } 速度 * 是是是 电风扇]]></content>
  </entry>
  <entry>
    <title><![CDATA[vsCode打开文件出现乱码问题]]></title>
    <url>%2F%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%2FvsCode%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE.html</url>
    <content type="text"><![CDATA[vsCode自动识别编码Code编码的设置(常见如UTF-8 GB2312)以及文件乱码问题的解决办法 文件-&gt;首选项-&gt;设置，然后在右边用户设置搜索: files.autoGuessEncoding ,将其勾上]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>vscode</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[github提高下载速度]]></title>
    <url>%2F%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%2F%E6%A8%A1%E7%89%88.html</url>
    <content type="text"><![CDATA[一级表头 666^img]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>github</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HTML笔记总结]]></title>
    <url>%2F%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0%2FHTML%E7%AC%94%E8%AE%B0.html</url>
    <content type="text"><![CDATA[HTML- 超文本标记语言123456789101112模版 &lt;!-- body注释 --&gt; /*style注释*/ &lt;!doctype html&gt; &lt;html lang="en"&gt; &lt;head&gt; &lt;meta name="Keywords" content="引擎搜索关键" /&gt; &lt;meta name="Description" content="免费广告位置" /&gt; &lt;link rel="icon" href="favicon.ico"&gt; 网页图标 &lt;base target="_blank" /&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt;&lt;/html&gt; 网页制作标准: 结构(html) 表现(css) 行为(js)浏览器内核:ie(Trident) 谷歌(Blink) 火狐(Gecko) 苹果(webkit)html结构: 1声明文档类型&lt;!doctype&gt; 根目录&lt;html&gt; 头部&lt;hand&gt; 身体&lt;body&gt;命 名规范: 不能以数字开头,不能用特殊符号,不能用中文常用标签: h1-h6 span div p i b pre 图片:img(src,width,height,alt,title) 超链接:a(href,target[_self,_blank]) 锚标记:&lt;a href="#id"&gt; &lt;div id="id"&gt; 列表: 无序:&lt;ul&gt; &lt;li&gt;&lt;/li&gt; &lt;/ul&gt; 有序:&lt;ol&gt; &lt;li&gt;&lt;/li&gt; &lt;/ol&gt; 自定义:&lt;dl&gt; &lt;dt&gt;标题&lt;/dt&gt; &lt;dd&gt;&lt;/dd&gt; &lt;/dl&gt;多媒体标签:&lt;audio src="" controls loop autoplay&gt;&lt;/audio&gt; 视频:video 属性:src(路径),controls(显示播放控制栏) loop:视频循环播放,autoplay(自动播放&lt;移动端&gt;) 音频:audio 属性和视频一样 边框线div&#123;border:1px solid red;&#125; 单条边框线:border-left:1px solid red; none无边框（默认值）solid实线 dashed虚线 dotted点状线 double双实线 边框圆角 div&#123; border-radius:50%(20px); &#125; 单个圆角 border-top-raidius:20px;内边距padding 百分比：10%（基于父级的宽度） 外边距margin 注意边框合并 当上下相邻的两个元素，在相邻的面同时拥有外边距时( 只会取大的,不会叠加)盒子模型: 从内到外为 内容&lt;内边距&lt;边框&lt;外边距 共同组成一个盒子总大小 不改变盒子总大小( 默认content-box ): box-sizing:border-box; (盒子的实际大小)盒子阴影：div&#123; box-shadow:5px 5px 10px 0px red inset; &#125; x轴偏移量 y轴偏移量 模糊度 模糊面积增量 阴影颜色 阴影风格(默认outset)； 多层阴影 逗号隔开;过渡: div&#123; transition:all 2s 5s linear; &#125; 过渡的属性 时间 延迟时间 运动曲线(默认ease,加速ease-in)； 多个属性不同的设置: transition:width 2s,height 4s; 样式初始化:兼容问题. body,dl,ol,ul,dd,dt,p,h1,h2,h3,h4,h5,h6&#123;margin:0;padding:0;&#125; // 拥有默认内外边距的标签 body&#123;font:12px/1.5 'Microsoft yahei';&#125; // 规定字体的行高和字体大小和字体风格 i,em &#123;font-style:normal;&#125; b ,strong&#123;font-weight:normal;&#125; //清除斜体 加粗 ol,ul&#123; list-style:none; &#125; /* 默认小黑原点，序列号 */ a&#123; text-decoration:none; color:inherit;&#125; /* 默认下划线 默认字体颜色*/ img&#123; border:0; vertical-align:bottom; &#125; /* IE边框、下边距 */ 标签包含: 段落不能含div 行块级 有默认3px空白 基线对齐方式造成字体样式 风格:a&#123; font-style:italic; &#125;normal默认 italic斜体字体 oblique倾斜字体 类型:a&#123; font-family:"Microsoft yahei/宋体/楷体.."; &#125; 粗细:a&#123; font-weight:bold; &#125; bold加粗 数字100-900; 行高:a&#123; line-height:22px; &#125; 复合样式:font:bold italic 16px/1.5 'Microsoft yahei' ; 字体大小/类型必须要文本样式: 水平对齐方式:a&#123;text-align:center;&#125; 值：left/right/center 文本修饰:a&#123;text-decoration:none;&#125; underline（下划线）、overline（上划线）、line-through（删除线） 首行缩进:a&#123;text-indent:10px;&#125; 允许使用负值 溢出处理:a&#123;text-overflow:clip;&#125; 值：clip（超出裁剪）、ellipsis（超出出现省略号）hidden(隐藏) 字母处理:a&#123;text-transform:none;&#125; 值：capitalize（单词首字母大写）、uppercase/lowercase（全部小写） 字间距:a&#123;letter-spacing:10px;&#125; 词间距:a&#123;word-spacing:10px;&#125; 换行方式a&#123; white-space:pre ; &#125; 保留空格、缩进、换行，但是文本不会自动换行） 单词换行方式:a&#123;word-break:break-all;&#125; break-all（允许在单词内换行 keep-all( 不允许在单词内换行 ) 内容溢出处理:div&#123; overflow:hidden; &#125; 溢出隐藏（hidden） 溢出出现滚动条（auto）指针样式（cursor:） pointer 一只手 move 可被移动 text 指示文本 wait 沙漏 help 问号 引用指针样式 li&#123; cursor:url('pointer.cur'),pointer; &#125; 第二个值 备用样式，且为必须值css样式的继承 1、部分常见继承样式：字体,行高等...... 2、继承注意点 a标签不会被继承字体颜色 继承属性的优先级较低css特性: 层叠性(在同一个标签同种属性后面会覆盖前面属性) 继承性:嵌套关系中,字体,颜色等会被子元素继承 优先级:标签选择器 &lt; 类选择器 &lt; ID选择器 &lt; 行内样式 &lt; !important转义字符 空格 &amp;nbsp;&amp;emsp; 大/小余号 &amp;gt;%lt 人民币 &amp;yen; 元素处理 元素显示分类: 块级(block), 行级inline(不支持宽高), 行内块(块级并排显示) 元素转化: display:inline-block; 元素显示状态 visibility:hidden / visible **占位隐藏 display:none / block **整个消失,不能过渡了 overflow:hidden / visible(默认) / auto / scroll; **超出部分处理 元素透明度 div&#123; opacity:0.5; &#125; 0~1 ： rgba(文字不会透明) opacity(整个元素透明) 行块元素对齐方式 vertical-align:top / bottom / middle中对齐 浮动 / 定位元素无效 浮动:div&#123; float:left; &#125; left/right 从右到左排列 不再支持 margin:auto; 行级元素可以设置宽高了 支持margin,padding 不能撑起父级的高度 清除浮动: 解决父级高度塌陷 清除浮动的属性元素的本身必须为块级特性 .clearFixed:after&#123; content:''; display:block; clear:both; &#125; .clearFixed&#123; zoom:1; &#125;/* IE低版本 */ 定位: div&#123; position:relative; left:1px; top:1px; &#125; 百分比 right:50% 相对 relative 绝对 absolute 静态定位(默认) static 固定定位：fixed 相对浏览器窗口移动 定位层级:z-index 优先父级比较精灵图: 背景定位 给负值; 二倍图: 需要时缩小一半阿里矢量图标库 图标官网地址：http://www.iconfont.cn/plus 2. 下载至本地引用 1. 在线引用图标 加入购物车--下载源代码--引人css--font-class方式--css选择器 类: .p id器: #p 标签: p 通配符: * 群组(并集): a , p 子代: .a &gt; p 后代 .a p 伪类选择器: 1、未被点击时a:link&#123; color:red; &#125; 2、鼠标悬停时a:hover&#123; color:red; &#125; 3、鼠标按下时a:active&#123; color:red; &#125; 4、点击过后时a:visited&#123; color:red; &#125; 属性选择器: [type="tetx"]&#123;&#125; 选中属性中包含某个值 [type*="t"]; 某个值开始: ^= 结束 :&amp;= 结构伪类: :first-child&#123;&#125; :last-child&#123;&#125; span:nth-child(n)&#123;从第一个子元素计算&#125; 焦点伪类(元素获得焦点) :focus&#123;&#125; 伪元素(模拟标签): a::after&#123;&#125; a::before&#123; content:'内容'; &#125; 元素前面插入内容 content 为必须的属性h5新标签(语义标签) nav header footer section article aside 等 表单元素 input type="url" 邮箱:email 网址:url 取色器:color 数字:number(step="2" 设置每次增加的值) 日历:date week(一年中的第几周)选择器的优先级: 选择器作用的范围越大优先级越低 1.行内 &gt; ID &gt; class &gt; 标签名 &gt; 通配符 &gt; 默认样式 背景属性 background-color(颜色)/image(图片)/size(大小)/repeat(重复方式:none不重复,-x/y延x/y轴)/position(定位) 关键字：center、top、right、bottom、left 固定的数值1px、百分比10% 背景大小:div&#123; background-size: cover&#125; cover：等比缩放铺满整个元素 contain：等比缩放到遇到第一条元素边缘 背景依附:div&#123; background-attachment:fixed; &#125; scroll：随界面的滚动而移动（默认值） fixed：不会随界面的滚动而移动 复合属性:background:url(“”) no-repeat center/cover fixed;表单 input: valid 验证 required 必填项 placeholder 设置提醒 maxlength:输入的最大长度 value:框中默认值 构成 &lt;form action=“提交地址”method=“提交方式(get普通/post加密)”&gt; 文本:text; 密码:password; 单选:radio; 多选: checkbox; //单选多选name值需要相同, checked选中 提交按钮:submit; 普通按钮:button; 重置:reset; 文件上传: file 隐藏输入框: hidden 多行文本输入框 &lt;textarea&gt;&lt;/textarea&gt; resize:none; 禁止改变大小 cols=“50” 一行最大字节 rows=“10” 最大行数 下拉列表 size="1" 可见的数目 selected 默认选中 multiple:可选择多个选项 disabled:禁止输入 &lt;select name=“date”&gt; &lt;optgroup lable="组名"&gt; //分组写法 &lt;option&gt;&lt;/option&gt; &lt;/optgroup&gt; &lt;option value=“1”&gt;一月&lt;/option&gt; &lt;/select&gt; 关联控件(label）通过for属性关联某些表单元素，使用户在使用鼠标操作时更加方便 &lt;label for=“textID”&gt;帐号:&lt;/label&gt;&lt;input id=“textID” /&gt;表格 行-单元行（tr） 列-单元格（ td 上下居中 左对齐显示 th 默认加粗并且左右上下居中 ） &lt;table&gt; th,td设置margin时没有效果 &lt;caption&gt;设置表头占一行&lt;/caption&gt; &lt;tr&gt; &lt;th&gt; &lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; 属性/样式 caption标题 th首行 tr行 td内容 1、表格边框 大小 &lt;table border='1'&gt;&lt;/table&gt; 2、边框合并 table&#123; border-collapse:collapse; &#125; 3、单元格合并行属性&lt;td rowspan='2'&gt;&lt;td&gt; 4、单元格合并列属性&lt;td colspan='3'&gt;&lt;td&gt;内联框架: 定义一个区域，并在这个区域直接加载一个外部网页 &lt;iframe src='连接路径' width='出现宽' height='出现高度' frameborder='1显示边框 0不显示' scrolling='(是否显示滚动条)yes no auto(自动显示)'&gt; &lt;/iframe&gt;transform 2d属性 只对 block 级元素生效 perspective: 800; 视距,由远及近效果 位置: transform:translate(x,y); x水平方向 百分比,按照自己宽度移动, y垂直方向 旋转:rotateX/Y(20deg) **正负表示方向 缩放:scale(x,y); **表示宽,高倍数 *一个值,宽高一样 ,小数表示缩 倾斜:skewX/Y .box&#123;width: 100px;height: 100px ; transition: all 2s;&#125; .box:hover&#123; width: 2px;height: 2px; transform: rotate(180deg) translateX(100px); &#125;css3动画 兼容前缀 @-webkit- @-moz- @-ms- @-o-keyframes @keyframes move&#123; //百分比,从上往下执行, 100% , 80% ,100%; from&#123; transform: rotateY(0deg);&#125; to&#123; transform: rotateY(‐180deg);&#125;&#125; li&#123;animation: move 3s linear 2s infinite alternate;&#125; 定义动画名 播放时间、速率、延迟、次数、反向 轮播。 一个元素调用多个动画 animation: move 1s,move2 1s; 3D属性 : 有3d 可不加视距 视距(给父级):perspective:1000px; 坐标轴: **x轴: 水平从左向右为正方向 **y轴: 垂直从上到下为正方向 **z轴: 从内向外为正方向 位移: translateX/Y/Z; 旋转: rotateX/Y/Z 缩放: scaleX/Y/Z(Z立体图形中表示厚度) ul&#123; transform‐style: preserve‐3d;&#125; li&#123; transform-origin: top center; 旋转点 transform: scaleY(0) rotateY(-180deg); //属性,多个逗号隔开 transition: all 0.5s; &#125; 2d旋转以点为中心(两个值构成坐标) 3d旋转以线为中心半圆:宽高1:2,圆角改变两个角 ;三角形: 宽高为0,边框加大,颜色透明,其中一条边框加颜色;目标伪类选择器 :target&#123; 与锚链接配合使用 &#125; #w&#123; color: red;&#125; &lt;p id="w"&gt;9&lt;/p&gt; &lt;a href="#w"&gt;去w&lt;/a&gt;渐变:(图片背景属性) 线性: background-image: linear-gradient(to top, red,green); 开始位置,开始颜色,结束颜色 90deg, red 20%,green 占整个元素的20% 径向: background-image: radial-gradient(red, yellow); 圆点位置和半径（范围） 默认中心 //100px 半径范围 at center 圆心位置 50px at 0px 0px, red, yellow过度运动曲线( 两边 展开) transition:all .5s cubic-bezier(0.61,-0.19, 0.7,-0.11);=============移动端移动web页面开发：核心在与解决页面适配 【页面中水平方向不能出现滚动条，页面中不能出现缩放效果】第一种页面适配解决方案： 流式布局（百分比布局） + 视口设置（meta标签） 1. 给父元素设置宽度为100%; 2. 不能让页面中的内容缩放（通过设置meta标签【视口实现】） &lt;meta name="viewport" content="width=device-width, initial-scale=1" user-scalable=0 /&gt; initial-scale=1 ： 禁止页面出现缩放 width=device-width ： 让盒子等于当前设备宽度（避免页面中出现滚动条） user-scalable=0 : 禁止用户缩放最小/大宽/高度(会跟随设备 达到峰值则不会再改变) max-width min-width 分辨率： 屏幕分辨率： 衡量移动设备在显示画质方面的一个标准。 物理分辨率： 设备的大小（设备的宽度 + 设备高度）像素密度（PPI）： 每英寸面积中所能容纳的像素点个数。 像素密度作用：在移动设备中像素越高，渲染出来的画质越好（细腻）px单位是一个相对单位 **1px在不同设备大小不一样设备独立像素（dpr）: 每台设备中都有一个固定的比例值。 实现了一个页面适配。2倍图： 将默认图片大小设置为原来的2倍（图片在不同设备中正常预览）。 需要时将背景图缩小一半(size),再去定位位置多行多字出现省略号 文本换行方式(一行末尾换行) word-break:keep-all; 高度固定 height:30px; 溢出隐藏 overflow:hidden; 文本溢出出现方式 text-overflow:ellipsis; 用来控制显示行数 -webkit-line-clamp: 2; 文字显示方式,默认水平 -webkit-box-orient: vertical; 将盒子转为弹性盒子 display: -webkit-box;伸缩布局 (子元素默认会一行显示) 盒子中有主轴(默认水平显示),侧轴(始终垂直主轴) 给父级设置: display:flex; 1.设置主轴方向(父级加) flex-direction:row(默认,一行显示) column(独占一行); 2.元素在主轴(水平)的对齐方式(位置) justify-content:flex-start(左上位置) flex-end(右上位置) center(盒子居中) space-between(两边无间隙 中间盒子居中) space-around(子元素中间有间隙) 3.元素垂直对齐方式(); align-items:flex-start(左上) flex-end(左下) center(中间对齐) stretch(默认值,占满整个高度： 拉伸) 4.伸缩盒超出父级宽度自动换行 flex-wrap:wrap; nowrap(默认); 5.文字水平垂直居中(本身要变成伸缩盒): align-items :center; justify-content:center; 6.设置子元素(需要父元素为伸缩盒) align-self:center; 单独控制对齐方式: flex:1; 设置等分,不等分 单份2,3.. order:1; 子元素排序(值越小越在前面) less(预处理器 维护和管理css代码) 依然是css语法,但嵌入变量等功能,简化css编写, 常见的有less,sass,stylus等 创建.less文件,会自动生产css文件 1.定义变量 @名称: 值; p&#123;width: @名称&#125; 2.嵌套写法 .box&#123; width:100px; .box1&#123; 属性:值 a&#123; &#125; &#125; &#125; 3.支持数字运算 + - * / width:100px + @num; 4.公共样式书写 .test(可带参数 / 或变量 )&#123;属性:值;&#125; .box&#123; .test(); &#125; rem + 媒体查询(页面精细化的适配) 用户缩放时,设备不同,显示的px也不同,固定大小需要适配; 媒体类型: 1. all(所有设备) 2. print(打印设备) 3. screen(带有屏幕的设备 pc浏览器,移动设备) 媒体特性: (设备的宽高,横屏还是竖屏) width(最小/最大) height orientation: portrait(竖屏) | landscape(横屏) 语法: 媒体特性(width:100px | orientation:landscape) @media only screen and (媒体特性)&#123; css代码 &#125; rem 相对单位( 相对于根标签,html文字大小的两倍 12px 2em=24px)em 相对单位 (当前标签文字大小)rem适配 常用稿件640px(20份) 750px(25份) @d:20; @dx:640px/@d; // UI图大小 height: 16rem/@dx; //页面使用rem表示 @media only screen and (min-width:320px)&#123; html&#123; font-size:320px/@d; //自动适配屏幕 &#125; &#125; 外联引入: &lt;link rel="stylesheet" href="01.css" media="only screen and (max-width: 420px)"&gt;响应式布局: 根据设备差异，网页布局会发生对应的改变 核心技术点： 媒体查询 + 流式布局 | 伸缩布局 通过媒体查询实现相应式布局 分析是PC设备 @media only screen and (min-width: 1025px) &#123; &#125; 分析是中等设备 @media only screen and (max-width: 1024px) &#123; &#125; 分析移动设备 @media only screen and (max-width: 768px) &#123; &#125;]]></content>
      <categories>
        <category>前端笔记</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo-next主题-炫酷博客搭建]]></title>
    <url>%2F%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%2FHexo-next%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2.html</url>
    <content type="text"><![CDATA[hexo搭建个人博客 见 hexo博客搭建 next主题设定代码高亮格式 主题的_config.yml文件,搜索 highlight_theme:有五种方式,看个人选择 12345highlight_theme: normal# night# night eighties# night blue# night bright 修改高亮语法,代码块–自定义样式:打开Blog\themes\next\source\css_custom\custom.styl，添加以下代码： 1234567891011121314151617//自定义样式code &#123; color: #ff7600; background: #fbf7f8; margin: 2px;&#125;// 大代码块的自定义样式.highlight, pre &#123; margin: 5px 0; padding: 5px; border-radius: 3px;&#125;.highlight, code, pre &#123; border: 1px solid #d6d6d6;&#125; 定义网站图标icon在图标网站找.ico图,将下载下来的小图和中图放在Blog/themes/next/source/images，将默认的两张图片替换掉 主题配置文件， 123favicon: small: /images/favicon-16x16-next.png //16X16小图 medium: /images/favicon-32x32-next.png //32X32大图 实现文章统计功能next 6 已经自带了 ，主题配置文件默认开启了，分两步 123456789101112131415161. 安装 npm install hexo-symbols-count-time --save2. 主配置文件（根hexo目录） 添加symbols_count_time: separated_meta: true # 是否另起一行（true的话不和发表时间等同一行） item_text_post: true # 首页文章统计数量前是否显示文字描述（本文字数、阅读时长） item_text_total: false # 页面底部统计数量前是否显示文字描述（站点总字数、站点阅读时长） awl: 4 # Average Word Length wpm: 500 # Words Per Minute（每分钟阅读词数）3. 修改blog配置文件，添加以下代码symbols_count_time: symbols: true # 文章字数统计 time: true # 文章阅读时长 total_symbols: true # 站点总字数统计 total_time: true # 站点总阅读时长 exclude_codeblock: false # 排除代码字数统计 博文置顶修改hexo-generator-index插件，把node_modules/hexo-generator-index/lib/generator.js中代码替换为： 12345678910111213141516171819202122232425262728'use strict';var pagination = require('hexo-pagination');module.exports = function(locals)&#123; var config = this.config; var posts = locals.posts; posts.data = posts.data.sort(function(a, b) &#123; if(a.top &amp;&amp; b.top) &#123; // 两篇文章top都有定义 if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排 else return b.top - a.top; // 否则按照top值降序排 &#125; else if(a.top &amp;&amp; !b.top) &#123; // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233） return -1; &#125; else if(!a.top &amp;&amp; b.top) &#123; return 1; &#125; else return b.date - a.date; // 都没定义按照文章日期降序排 &#125;); var paginationDir = config.pagination_dir || 'page'; return pagination('', posts, &#123; perPage: config.index_generator.per_page, layout: ['index', 'archive'], format: paginationDir + '/%d/', data: &#123; __index: true &#125; &#125;);&#125;; 文章添加Top值，值越大，越靠前： 12345title: Hexo-NexT主题配置date: 2019-09-20 20:41:08categories: Hexotags: [hexo,博客]top: 100 修改字体大小编辑Blog/themes/next/source/css/_variables/base.styl，搜索$font-size-base， 修改为你想要的大小$font-size-base = 14px 实现点击出现桃心效果 在/themes/next/source/js下新建文件 love.js, 代码为: 1!function(e,t,a)&#123;function n()&#123;c(".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"),o(),r()&#125;function r()&#123;for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText="left:"+d[e].x+"px;top:"+d[e].y+"px;opacity:"+d[e].alpha+";transform:scale("+d[e].scale+","+d[e].scale+") rotate(45deg);background:"+d[e].color+";z-index:99999");requestAnimationFrame(r)&#125;function o()&#123;var t="function"==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;function i(e)&#123;var a=t.createElement("div");a.className="heart",d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;function c(e)&#123;var a=t.createElement("style");a.type="text/css";try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName("head")[0].appendChild(a)&#125;function s()&#123;return"rgb("+(255*Math.random())+","+(255Math.random())+","+~~(255Math.random())+")"&#125;var d=[];e.requestAnimationFrame=function()&#123;return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3/60)&#125;&#125;(),n()&#125;(window,document); 在\themes\next\layout_layout.swig文件末尾添加： 1&lt;script type="text/javascript" src="/js/src/clicklove.js"&gt;&lt;/script&gt; 博文压缩12345678910111213141516171819202122232425262728293031323334353637383940在站点的根目录下执行以下命令：* $ npm install gulp -g* $ npm install gulp-minify-css gulp-uglify gulp-htmlmin gulp-htmlclean gulp --save在如下图所示，在myBlog下新建 gulpfile.js ，并填入以下内容：​```jsvar gulp = require('gulp');var minifycss = require('gulp-minify-css');var uglify = require('gulp-uglify');var htmlmin = require('gulp-htmlmin');var htmlclean = require('gulp-htmlclean');// 压缩 public 目录 cssgulp.task('minify-css', function() &#123; return gulp.src('./public/**/*.css') .pipe(minifycss()) .pipe(gulp.dest('./public'));&#125;);// 压缩 public 目录 htmlgulp.task('minify-html', function() &#123; return gulp.src('./public/**/*.html') .pipe(htmlclean()) .pipe(htmlmin(&#123; removeComments: true, minifyJS: true, minifyCSS: true, minifyURLs: true, &#125;)) .pipe(gulp.dest('./public'))&#125;);// 压缩 public/js 目录 jsgulp.task('minify-js', function() &#123; return gulp.src('./public/**/*.js') .pipe(uglify()) .pipe(gulp.dest('./public'));&#125;);// 执行 gulp 命令时执行的任务gulp.task('default', [ 'minify-html','minify-css','minify-js']); 执行 hexo g &amp;&amp; gulp 就会根据 gulpfile.js 中的配置，对 public 目录中的静态资源文件进行压缩。 侧边栏社交小图标设置打开主题配置文件（_config.yml），搜索social_icons:,在图标库找自己喜欢的小图标，并将名字复制在如下位置 12345social: github: 路径 掘金: 路径social_icons: github: 图标名称 主页文章添加阴影效果 打开\themes\next\source\css_custom\custom.styl,向里面加入：12345678// 主页文章添加阴影效果.post &#123;margin-top: 60px;margin-bottom: 60px;padding: 25px; -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5); -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);&#125; 添加 README.md 文件 每个项目下一般都有一个 README.md 文件，但是使用 hexo 部署到仓库后，项目下是没有 README.md 文件的。 在 Hexo 目录下的 source 根目录下添加一个 README.md 文件， 修改站点配置文件 _config.yml，将 skip_render 参数的值设置为: skip_render: README.md 保存退出即可。再次使用 hexo d 命令部署博客的时候就不会在渲染 README.md 这个文件了。 设置网站的图标Favicon 将图标放在/themes/next/source/images里 修改主题配置文件：favicon: /images/favicon.ico 实现字数统计功能 在根目录下安装 hexo-wordcount,运行：$ npm install hexo-wordcount –save 然后在主题的配置文件中，配置如下：1234post_wordcount: item_text: true wordcount: true min2read: true 实现站内搜索NexT主题支持集成 Swiftype、 微搜索、Local Search 和 Algolia,但Swiftype和Algolia都只有一段时间的试用期。所以我采用了Hexo提供的Local Search,原理是通过hexo-generator-search插件在本地生成一个search.xml/json文件，通过这个文件实现搜索功能。 安装插件 12npm install hexo-generator-searchnpm install hexo-generator-searchdb 修改hexo配置: 在你的hexo目录下的_config.yml中增加如下配置： 12345search: path: search.xml field: post format: html limit: 10000 配置next中的搜索入口打开themes\next_config.yml，搜索 local search: 1234local_search: enable: true trigger: auto #如果自动，通过改变输入触发搜索 top_n_per_article: 1 #如果自动，triggeif手动，按下回车键或搜索按钮来触发搜索，搜索显示每篇文章的前n个结果，显示所有结果设置为-1 自定义鼠标样式 找到当前使用主题下面的 themes\hexo-theme-next\source\css_custom\custom.styl 加入鼠标样式123body &#123; cursor: url(img/鼠标样式图片的名称.cur), auto;&#125; 为博客加上萌萌的宠物 根目录安装1npm install --save hexo-helper-live2d 推荐配置在 Hexo 的配置文件中，防止更换主题后 live2d 失效。 基础配置： 1234567891011121314151617#Live2Dlive2d: enable: true #默认开启 scriptFrom: local # 默认 pluginRootPath: live2dw/ # 插件在站点上的根目录(相对路径) pluginJsPath: lib/ # 脚本文件相对与插件根目录路径 pluginModelPath: assets/ # 模型文件相对与插件根目录路径 tagMode: false # 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中 debug: false # 调试, 是否在控制台输出日志 model: use: live2d-widget-model-koharu #当前使用的模型 display: position: right #显示位置：左或右 width: 150 #画布的宽度，显示模型画布的长度 height: 300 #画布高度显示模型画布的高度 mobile: show: true #是否在移动设备上显示，默认为true 模型有: 123456789101112131415161718192021npm install --save live2d-widget-model-chitosenpm install --save live2d-widget-model-epsilon2_1npm install --save live2d-widget-model-gfnpm install --save live2d-widget-model-harunpm install --save live2d-widget-model-harutonpm install --save live2d-widget-model-hibikinpm install --save live2d-widget-model-hijikinpm install --save live2d-widget-model-izuminpm install --save live2d-widget-model-koharunpm install --save live2d-widget-model-mikunpm install --save live2d-widget-model-ni-jnpm install --save live2d-widget-model-niconpm install --save live2d-widget-model-nietzschenpm install --save live2d-widget-model-nipsilonnpm install --save live2d-widget-model-nitonpm install --save live2d-widget-model-shizukunpm install --save live2d-widget-model-tororonpm install --save live2d-widget-model-tsumikinpm install --save live2d-widget-model-unitychannpm install --save live2d-widget-model-wankonpm install --save live2d-widget-model-z16 -&gt;效果图 高级配置：(建议小白玩家可以不必理会) 具体的设置，以及你想要的更多，可以参考官方API文档,地址：L2Dwidget | live2d-widget.js 取消live2d 1npm uninstall hexo-helper-live2d 之后删除掉站点_config.yml下的配置信息即可 Hexo主题插入音乐之aplayer音乐播放器 使用音乐平台提供的插件 体验很差 所以使用hexo-tag-aplayer插件 下载github压缩包 APlayer，，解压后把dist文件夹复制到\themes\next\source目录中 在dist目录里，新建music.js文件，并把如下代码粘贴进去。 12345678910111213141516171819const ap = new APlayer(&#123; container: document.getElementById('aplayer'), fixed: true, autoplay: false, audio: [ &#123; name: "你一定要幸福", artist: '简弘亦', url: 'http://www.ytmp3.cn/down/51689.mp3', cover: 'http://img.ytmp3.cn/image/52.jpg', &#125;, &#123; name: 'In The Eyes', artist: '江映东', url: 'http://www.ytmp3.cn/down/53053.mp3', cover: 'http://img.ytmp3.cn/image/10.jpg', &#125; ]&#125;); 在\themes\next\layout_layout.swig文件中，里新增如下代码： 12345&lt;!-- 音频播放 --&gt;&lt;link rel="stylesheet" href="/dist/APlayer.min.css"&gt;&lt;div id="aplayer"&gt;&lt;/div&gt;&lt;script type="text/javascript" src="/dist/APlayer.min.js"&gt;&lt;/script&gt;&lt;script type="text/javascript" src="/dist/music.js"&gt;&lt;/script&gt; 补充Aplayer 中文文档mp3音乐外链网站 个人站点首发 添加来必力云跟帖功能添加jiathis分享修改打赏字体不闪动返回顶部加进度条打开 themes/next/_config.yml ,搜索关键字 scrollpercent ,把 false 改为 true 头像设置 你的要加的头像修整好，最好是像素200×200的，复制粘贴到\themes\next\source\images文件下 在主配置文件_config.yml里面找到avatar，添加 url: /images/avatar.gif（注意：url：要加一个空格） 在网站底部加上访问量添加热度 next主题集成leanCloud 文章加密访问. 使用category_map实现分组映射有同学也注意到了，官方文档中还提到permalink可以使用:category变量，比如我们想要这样定义永久链接： 修改博客配置文件_config.yml： permalink: :year/:category/:id/ … Category &amp; Tagdefault_category: uncatalog 为了让中文分组名在网址中显示为英文，我们可以创建分组名映射（category_map）： 123456789101112131415161718192021222324252627category_map: Adobe脚本语言学习: adobe-extendscript Android基础: android-base Android案例实现: android-training Hexo: hexo LK字幕脚本开发: lk-ae-subtitlescript 从零开发Anykey: passport-pandora 统计: statistics 未分类: uncatalog 文档管理: doc-manage 正则表达式: regex 正则表达式学习: regex 字幕组: fansubtag_map: 同理tag_map可以实现标签的中英文转换。 版权声明：本文为CSDN博主「Likianta Me」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/Likianta/article/details/79343427]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[markDown使用]]></title>
    <url>%2F%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%2Fmarkdown%E8%AF%AD%E6%B3%95%E4%BD%BF%E7%94%A8.html</url>
    <content type="text"><![CDATA[markDown使用 下载makrDownPad2:云盘地址: https://pan.baidu.com/s/1FN9F0ZlQxe8-U21gU2EMsw提取码: dnm6html渲染出错: 安装 Awesomium 1.6.6 SDK 破解makrDown:邮件:Soar360@live.com秘钥: GBPduHjWfJU1mZqcPM3BikjYKF6xKhlKIys3i1MU2eJHqWGImDHzWdD6xhMNLGVpbP2M5SN6bnxn2kSE8qHqNY5QaaRxmO3YSMHxlv2EYpjdwLcPwfeTG7kUdnhKE0vVy4RidP6Y2wZ0q74f47fzsZo45JE2hfQBFi2O9Jldjp1mW8HUpTtLA2a5/sQytXJUQl/QKO0jUQY4pa5CCx20sV1ClOTZtAGngSOJtIOFXK599sBr5aIEFyH0K7H4BoNMiiDMnxt1rD8Vb/ikJdhGMMQr0R4B+L3nWU97eaVPTRKfWGDE8/eAgKzpGwrQQoDh+nzX1xoVQ8NAuH+s4UcSeQ== 基础语法123456789101112131415161718192021222324252627282930313233343536373839404142434445464748一级标题# 标题 二级标题 (...)## 标题 段落的换行是使用两个以上空格加上回车。* 斜体文本*** 粗体文本***** 粗斜体文本***可以在一行中用三个以上的星号、减号、底线来建立一个分隔线***---添加删除线，只需要在文字的两端加上两个波浪线 ~~ 即可~~内容~~下划线可以通过 HTML 的 &lt;u&gt; 标签来实现：脚注是对文本的补充说明。Markdown 脚注的格式如下:[^要注明的文本] 创建脚注格式类似这样 [^RUNOOB]。 [^RUNOOB]: 菜鸟教程 -- 学的不仅是技术，更是梦想！！！有序列表 使用星号(*)、加号(+)或是减号(-)作为列表标记 *无序无序列表 使用数字并加上 . 1. 内容 2. 内容 列表嵌套 子列表中的选项添加四个空格 1. 第一项： - 第一项嵌套的第一个元素 - 第一项嵌套的第二个元素列表下使用tab 内容不会 解析正常情况使用tab 或 `` ` 都会解析内容;区块引用是在段落开头使用 &gt; 符号 (相当于缩进) &gt; 最外层 &gt; &gt; 第一层嵌套 &gt; &gt; &gt; 第二层嵌套 原代码显示 单行 1234`代码```` 链接使用方法如下 不支持新页面打开 可以a标签实现 链接名称一个链接 菜鸟教程 12Markdown 图片语法格式如下： ; 不支持宽高 可以用 img标签代替 12制作表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行(让下一行不一样)) 表头 表头 单元格 单元格 单元格 单元格 -: 设置内容和标题栏居右对齐。:- 设置内容和标题栏居左对齐。:-: 设置内容和标题栏居中对齐。| :—–| —-: | :—-: | 123不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写目前支持的 HTML 元素有： 等]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>markDown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Typora使用]]></title>
    <url>%2F%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%2FTypora%E7%9A%84%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8.html</url>
    <content type="text"><![CDATA[Typora 标题 # 一级标题 # 二级标题 … 最多6级标题 快捷键: Ctrl + 数字1-6 引用 &gt; 引用内容1 &gt;&gt; 引用内容2 斜体 *斜体* 或者 _斜体_ 字体加粗 **粗体** 或者 __粗体__ 下划线 &lt;u&gt;下划线&lt;/u&gt; 删除线 ~~删除线~~ 脚注 脚注[^1] [^1]:定义脚注 上标 $4^5$ 5是4的上标 $4^{(3-1)} = 16$ (3-1) 为4的上标 下标 $4_50$ 5为4的下标 分割线 *** 或者 --- 高亮 ==高亮== 代码块原样显示 单行 1`代码1` 原样显示 多行​12多行内容,可以指定语言(不会解析)​ 列表无序列表​* 无序列表 或者 + 或者 - 多行无序列表嵌套​*列表第一层回车后按下tab键列表第二层回车后再次按tab键 列表第三层 表格1234​|内容1|内容2|...|​|--|--|--| #用于隔行变色(不占地方)|内容3|内容4|...||内容 |内容 |...| 连接插入图片: 1234567启用保存图片： File–&gt;Preference–&gt;Editor–&gt;Image Insert–&gt;Allow copy images to given folder选择保存的位置： Edit–&gt;ImageTools–&gt;When Insert Local Images–&gt; Copy Image File to Folder...————————————————以上步骤目的：在编辑文章时从剪贴板获得的图片或者拖拽图片，自动会将该图片存储到指定文件夹下。TIP：图片支持拖拽，但是图片不支持粘贴复制，但是却可以从剪贴板中粘贴 超链接: 12345方法1: 显示 百度 代替地址[百度](https://www.baidu.com/)方法2: 直接显地址&lt;[https://www.baidu.com/&gt; 特殊符号按HTML特殊字符编码对照表() 快捷键Ctrl+F 搜索 Ctrl+D 选中当前的一个单词 Ctrl+L 选中当前鼠标位置的一句话]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>markDown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[github提高下载速度]]></title>
    <url>%2F%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%2Fgithub%E6%8F%90%E9%AB%98%E4%B8%8B%E8%BD%BD%E9%80%9F%E5%BA%A6.html</url>
    <content type="text"><![CDATA[GitHub下载提速通过修改hosts文件来提速（该方法也可加速其他因为CDN被屏蔽导致访问慢的网站） 第一步：获取GitHub的IP地址通过访问：http://tool.chinaz.com/dns或者https://www.ipaddress.com/ 获取以下三个网站的ip: github.com github.global.ssl.fastly.net codeload.github.com第二步：选择TTL值较小的填入hosts文件中hosts文件路径：C:\Windows\System32\drivers\etc （注：修改hosts文件需要管理员权限，可以复制到桌面修改过后再覆盖文件）第三步：刷新DNS修改完hosts还不会立即生效，需要刷新DNS缓存 windows下刷新DNS的方法： 打开CMD 输入ipconfig /flushdns linux下输入指令：sudo /etc/init.d/networking restart 即可。然后关闭浏览器再访问github时下载速度就会明显挺高]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>github</tag>
        <tag>博客</tag>
      </tags>
  </entry>
</search>
